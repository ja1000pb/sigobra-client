{"version":3,"sources":["node_modules/br-mask/dist/app.module.js","node_modules/br-mask/dist/directives/br-mask.js","node_modules/br-mask/dist/directives/index.js","node_modules/br-mask/dist/index.js"],"names":[],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrMaskDirective } from './directives/br-mask';\nvar BrMaskerModule = (function () {\n    function BrMaskerModule() {\n    }\n    return BrMaskerModule;\n}());\nexport { BrMaskerModule };\nBrMaskerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    BrMaskDirective\n                ],\n                exports: [\n                    BrMaskDirective\n                ],\n                imports: [\n                    CommonModule\n                ],\n                schemas: [\n                    CUSTOM_ELEMENTS_SCHEMA\n                ]\n            },] },\n];\n/** @nocollapse */\nBrMaskerModule.ctorParameters = function () { return []; };\n//# sourceMappingURL=app.module.js.map","import { Directive, ElementRef, Host, HostListener, Injectable, Input, Optional, SkipSelf } from '@angular/core';\nimport { FormControl, FormGroupDirective } from '@angular/forms';\nvar BrMaskModel = (function () {\n    function BrMaskModel() {\n        this.type = 'alfa';\n        this.decimal = 2;\n        this.decimalCaracter = \",\";\n        this.userCaracters = false;\n        this.numberAndTousand = false;\n        this.moneyInitHasInt = true;\n    }\n    return BrMaskModel;\n}());\nexport { BrMaskModel };\nvar BrMaskDirective = (function () {\n    function BrMaskDirective(controlContainer, elementRef) {\n        this.controlContainer = controlContainer;\n        this.elementRef = elementRef;\n        this.brmasker = new BrMaskModel();\n    }\n    /**\n    * Event key up in directive\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @constant {string} value\n    */\n    BrMaskDirective.prototype.inputKeyup = function (event) {\n        var value = this.returnValue(event.target.value);\n        this.setValueInFormControl(value);\n    };\n    BrMaskDirective.prototype.onNgModelChange = function (e) {\n        var value = this.returnValue(e);\n        if (value) {\n            this.setValueInFormControl(value);\n        }\n    };\n    BrMaskDirective.prototype.ngOnInit = function () {\n        if (!this.brmasker.type) {\n            this.brmasker.type = 'all';\n        }\n        if (!this.brmasker.decimal) {\n            this.brmasker.decimal = 2;\n        }\n        if (this.brmasker.moneyInitHasInt === undefined) {\n            this.brmasker.moneyInitHasInt = true;\n        }\n        if (!this.brmasker.decimalCaracter) {\n            this.brmasker.decimalCaracter = ',';\n        }\n        if (this.controlContainer) {\n            if (this.formControlName) {\n                this.brmasker.form = this.controlContainer.control.get(this.formControlName);\n            }\n            else {\n                console.warn('Missing FormControlName directive from host element of the component');\n            }\n        }\n        else {\n            console.warn('Can\\'t find parent FormGroup directive');\n        }\n        this.initialValue();\n    };\n    BrMaskDirective.prototype.initialValue = function () {\n        var value = this.returnValue(this.elementRef.nativeElement.value);\n        this.setValueInFormControl(value);\n    };\n    /**\n    * The verification of form\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.verifyFormControl()</caption>\n    * @returns {boolean} return a boolean value\n    */\n    BrMaskDirective.prototype.verifyFormControl = function () {\n        if (this.brmasker.form instanceof FormControl) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n    * Set Value em FormControl\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.setValueInFormControl(string)</caption>\n    */\n    BrMaskDirective.prototype.setValueInFormControl = function (value) {\n        if (!this.verifyFormControl()) {\n            this.elementRef.nativeElement.value = value;\n            return;\n        }\n        this.brmasker.form.setValue(value);\n        this.brmasker.form.updateValueAndValidity();\n    };\n    /**\n    * For initial value\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.setValueInFormControl(string, model)</caption>\n    * @param {string} value\n    * @param {BrMaskModel} config\n    * @returns {string} mask intial value\n    */\n    BrMaskDirective.prototype.writeCreateValue = function (value, config) {\n        if (config === void 0) { config = new BrMaskModel(); }\n        if (value && config.phone) {\n            return value.replace(/^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/gi, '$1 ($2) $3-$4');\n        }\n        if (value && config.phoneNotDDD) {\n            return this.phoneNotDDDMask(value);\n        }\n        if (value && config.money) {\n            return this.writeValueMoney(value, config);\n        }\n        if (value && config.person) {\n            return this.writeValuePerson(value);\n        }\n        if (value && config.percent) {\n            return this.writeValuePercent(value);\n        }\n        if (this.brmasker.userCaracters) {\n            return this.usingSpecialCharacters(value, this.brmasker.mask, this.brmasker.len);\n        }\n        if (value && config.mask) {\n            this.brmasker.mask = config.mask;\n            if (config.len) {\n                this.brmasker.len = config.len;\n            }\n            return this.onInput(value);\n        }\n        return value;\n    };\n    /**\n    * For initial value percent\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.writeValuePercent(string)</caption>\n    * @param {string} value\n    * @returns {string} mask intial value\n    */\n    BrMaskDirective.prototype.writeValuePercent = function (value) {\n        value.replace(/\\D/gi, '');\n        value.replace(/%/gi, '');\n        return value.replace(/([0-9]{0})$/gi, '%$1');\n    };\n    /**\n    * For initial value person\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.writeValuePerson(string)</caption>\n    * @param {string} value\n    * @returns {string} mask intial value\n    */\n    BrMaskDirective.prototype.writeValuePerson = function (value) {\n        if (value.length <= 11) {\n            return value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/gi, '\\$1.\\$2.\\$3\\-\\$4');\n        }\n        else {\n            return value.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/gi, '\\$1.\\$2.\\$3\\/\\$4\\-\\$5');\n        }\n    };\n    /**\n    * For initial value money\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.writeValueMoney(string, model)</caption>\n    * @param {string} value\n    * @param {BrMaskModel} value\n    * @returns {string} mask intial value\n    */\n    BrMaskDirective.prototype.writeValueMoney = function (value, config) {\n        if (config === void 0) { config = new BrMaskModel(); }\n        return this.moneyMask(value, config);\n    };\n    /**\n    * Here is one of the main functions\n    * responsible for identifying the type of mask\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.returnValue(string)</caption>\n    * @param {string} value\n    * @returns {string} mask value\n    */\n    BrMaskDirective.prototype.returnValue = function (value) {\n        if (!this.brmasker.mask) {\n            this.brmasker.mask = '';\n        }\n        if (value) {\n            var formValue = value;\n            if (this.brmasker.type === 'alfa') {\n                formValue = formValue.replace(/\\d/gi, '');\n            }\n            if (this.brmasker.type === 'num') {\n                formValue = formValue.replace(/\\D/gi, '');\n            }\n            if (this.brmasker.money) {\n                return this.moneyMask(this.onInput(formValue), this.brmasker);\n            }\n            if (this.brmasker.phone) {\n                return this.phoneMask(formValue);\n            }\n            if (this.brmasker.phoneNotDDD) {\n                return this.phoneNotDDDMask(formValue);\n            }\n            if (this.brmasker.person) {\n                return this.peapollMask(formValue);\n            }\n            if (this.brmasker.percent) {\n                return this.percentMask(formValue);\n            }\n            if (this.brmasker.numberAndTousand) {\n                return this.thousand(formValue);\n            }\n            if (this.brmasker.userCaracters) {\n                return this.usingSpecialCharacters(formValue, this.brmasker.mask, this.brmasker.len);\n            }\n            return this.onInput(formValue);\n        }\n        else {\n            return '';\n        }\n    };\n    BrMaskDirective.prototype.applyCpfMask = function (formValue) {\n        formValue = formValue.replace(/\\D/gi, '');\n        formValue = formValue.replace(/(\\d{3})(\\d)/gi, '$1.$2');\n        formValue = formValue.replace(/(\\d{3})(\\d)/gi, '$1.$2');\n        formValue = formValue.replace(/(\\d{3})(\\d{1,2})$/gi, '$1-$2');\n        return formValue;\n    };\n    BrMaskDirective.prototype.applyCnpjMask = function (formValue) {\n        formValue = formValue.replace(/\\D/gi, '');\n        formValue = formValue.replace(/(\\d{2})(\\d)/gi, '$1.$2');\n        formValue = formValue.replace(/(\\d{3})(\\d)/gi, '$1.$2');\n        formValue = formValue.replace(/(\\d{3})(\\d)/gi, '$1/$2');\n        formValue = formValue.replace(/(\\d{4})(\\d{1,4})$/gi, '$1-$2');\n        formValue = formValue.replace(/(\\d{2})(\\d{1,2})$/gi, '$1$2');\n        return formValue;\n    };\n    /**\n    * Here we have a mask for percentage\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.percentMask(string)</caption>\n    * @param {string} value\n    * @returns {string} string percentage\n    */\n    BrMaskDirective.prototype.percentMask = function (value) {\n        var tmp = value;\n        tmp = tmp.replace(/\\D/gi, '');\n        tmp = tmp.replace(/%/gi, '');\n        tmp = tmp.replace(/([0-9]{0})$/gi, '%$1');\n        return tmp;\n    };\n    /**\n    * Here we have a mask for phone in 8 digits or 9 digits\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.phoneMask(string)</caption>\n    * @param {string} value\n    * @returns {string} string phone\n    */\n    BrMaskDirective.prototype.phoneMask = function (value) {\n        var formValue = value;\n        if (formValue.length > 14 || formValue.length === 11) {\n            this.brmasker.len = 15;\n            this.brmasker.mask = '(99) 99999-9999';\n            formValue = formValue.replace(/\\D/gi, '');\n            formValue = formValue.replace(/(\\d{2})(\\d)/gi, '$1 $2');\n            formValue = formValue.replace(/(\\d{5})(\\d)/gi, '$1-$2');\n            formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1$2');\n        }\n        else {\n            this.brmasker.len = 14;\n            this.brmasker.mask = '(99) 9999-9999';\n            formValue = formValue.replace(/\\D/gi, '');\n            formValue = formValue.replace(/(\\d{2})(\\d)/gi, '$1 $2');\n            formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1-$2');\n            formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1$2');\n        }\n        return this.onInput(formValue);\n    };\n    /**\n    * Here we have a mask for phone in 8 digits or 9 digits not ddd\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.phoneMask(string)</caption>\n    * @param {string} value\n    * @returns {string} string phone\n    */\n    BrMaskDirective.prototype.phoneNotDDDMask = function (value) {\n        var formValue = value;\n        if (formValue.length > 9) {\n            this.brmasker.len = 10;\n            this.brmasker.mask = '99999-9999';\n            formValue = formValue.replace(/\\D/gi, '');\n            formValue = formValue.replace(/(\\d{5})(\\d)/gi, '$1-$2');\n            formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1$2');\n        }\n        else {\n            this.brmasker.len = 9;\n            this.brmasker.mask = '9999-9999';\n            formValue = formValue.replace(/\\D/gi, '');\n            formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1-$2');\n            formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1$2');\n        }\n        return this.onInput(formValue);\n    };\n    /**\n    * Here we have a mask for peapoll ID\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.peapollMask(string)</caption>\n    * @param {string} value\n    * @returns {string} string ID\n    */\n    BrMaskDirective.prototype.peapollMask = function (value) {\n        var formValue = value;\n        if (formValue.length >= 14) {\n            if (formValue.length === 14 && formValue.indexOf('-') > 0) {\n                this.brmasker.len = 14;\n                this.brmasker.mask = '999.999.999-99';\n                formValue = this.applyCpfMask(formValue);\n            }\n            else {\n                this.brmasker.len = 18;\n                this.brmasker.mask = '99.999.999/9999-99';\n                formValue = this.applyCnpjMask(formValue);\n            }\n        }\n        else {\n            this.brmasker.len = 14;\n            this.brmasker.mask = '999.999.999-99';\n            formValue = this.applyCpfMask(formValue);\n        }\n        return this.onInput(formValue);\n    };\n    /**\n    * Here we have a mask for money mask\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.moneyMask(string)</caption>\n    * @param {string} value\n    * @param {BrMaskModel} config\n    * @returns {string} string money\n    */\n    BrMaskDirective.prototype.moneyMask = function (value, config) {\n        var decimal = config.decimal || this.brmasker.decimal;\n        value = value\n            .replace(/\\D/gi, '')\n            .replace(new RegExp('([0-9]{' + decimal + '})$', 'g'), config.decimalCaracter + '$1');\n        if (value.length === 1 && !this.brmasker.moneyInitHasInt) {\n            var dec = Array(decimal - 1).fill(0);\n            return \"0\" + config.decimalCaracter + dec.join('') + value;\n        }\n        if (value.length === decimal + 1) {\n            return '0' + value;\n        }\n        else if (value.length > decimal + 2 && value.charAt(0) === '0') {\n            return value.substr(1);\n        }\n        if (config.thousand && value.length > (Number(4) + Number(config.decimal))) {\n            var valueOne = \"([0-9]{3})\" + config.decimalCaracter + \"([0-9]{\" + config.decimal + \"}$)\";\n            value = value.replace(new RegExp(\"\" + valueOne, \"g\"), config.thousand + \"$1\" + config.decimalCaracter + \"$2\");\n        }\n        if (config.thousand && value.length > (Number(8) + Number(config.decimal))) {\n            var valueTwo = \"([0-9]{3})\" + config.thousand + \"([0-9]{3})\" + config.decimalCaracter + \"([0-9]{\" + config.decimal + \"}$)\";\n            value = value.replace(new RegExp(\"\" + valueTwo, \"g\"), config.thousand + \"$1\" + config.thousand + \"$2\" + config.decimalCaracter + \"$3\");\n        }\n        return value;\n    };\n    /**\n    * Responsible for returning the empty mask\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.onInput(string)</caption>\n    * @param {string} value\n    * @returns {string} value\n    */\n    BrMaskDirective.prototype.onInput = function (value) {\n        return this.formatField(value, this.brmasker.mask, this.brmasker.len);\n    };\n    /**\n    * Responsible for special characters\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.usingSpecialCharacters(string)</caption>\n    * @param {string} field\n    * @param {string} mask\n    * @param {number} size\n    * @returns {string} value\n    */\n    BrMaskDirective.prototype.usingSpecialCharacters = function (field, mask, size) {\n        if (!size) {\n            size = 99999999999;\n        }\n        var boleanoMascara;\n        var exp = /\\-|\\.|\\,| /gi;\n        var campoSoNumeros = field.toString().replace(exp, '');\n        var posicaoCampo = 0;\n        var NovoValorCampo = '';\n        var sizeMascara = campoSoNumeros.length;\n        for (var i = 0; i < sizeMascara; i++) {\n            if (i < size) {\n                boleanoMascara = ((mask.charAt(i) === '-') || (mask.charAt(i) === '.') || (mask.charAt(i) === ','));\n                if (boleanoMascara) {\n                    NovoValorCampo += mask.charAt(i);\n                    sizeMascara++;\n                }\n                else {\n                    NovoValorCampo += campoSoNumeros.charAt(posicaoCampo);\n                    posicaoCampo++;\n                }\n            }\n        }\n        return NovoValorCampo;\n    };\n    /**\n    * Responsible formating number\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.thousand(string)</caption>\n    * @param {string} value\n    */\n    BrMaskDirective.prototype.thousand = function (value) {\n        var val = value.replace(/\\D/gi, '');\n        var reverse = val.toString().split('').reverse().join('');\n        var thousands = reverse.match(/\\d{1,3}/g);\n        if (thousands) {\n            return thousands.join(\"\" + (this.brmasker.thousand || '.')).split('').reverse().join('');\n        }\n    };\n    /**\n    * Responsible for removing special characters\n    * @author Antonio Marques <tmowna@gmail.com>\n    * @example <caption>this.formatField(string)</caption>\n    * @param {string} field\n    * @param {string} mask\n    * @param {number} size\n    * @returns {string} value\n    */\n    BrMaskDirective.prototype.formatField = function (field, mask, size) {\n        if (!size) {\n            size = 99999999999;\n        }\n        var boleanoMascara;\n        var exp = /\\_|\\-|\\.|\\/|\\(|\\)|\\,|\\*|\\+|\\@|\\#|\\$|\\&|\\%|\\:| /gi;\n        var campoSoNumeros = field.toString().replace(exp, '');\n        var posicaoCampo = 0;\n        var NovoValorCampo = '';\n        var TamanhoMascara = campoSoNumeros.length;\n        for (var i = 0; i < TamanhoMascara; i++) {\n            if (i < size) {\n                boleanoMascara = (mask.charAt(i) === '-') || (mask.charAt(i) === '.') || (mask.charAt(i) === '/');\n                boleanoMascara = boleanoMascara || mask.charAt(i) === '_';\n                boleanoMascara = boleanoMascara || ((mask.charAt(i) === '(') || (mask.charAt(i) === ')') || (mask.charAt(i) === ' '));\n                boleanoMascara = boleanoMascara || ((mask.charAt(i) === ',') || (mask.charAt(i) === '*') || (mask.charAt(i) === '+'));\n                boleanoMascara = boleanoMascara || ((mask.charAt(i) === '@') || (mask.charAt(i) === '#') || (mask.charAt(i) === ':'));\n                boleanoMascara = boleanoMascara || ((mask.charAt(i) === '$') || (mask.charAt(i) === '&') || (mask.charAt(i) === '%'));\n                if (boleanoMascara) {\n                    NovoValorCampo += mask.charAt(i);\n                    TamanhoMascara++;\n                }\n                else {\n                    NovoValorCampo += campoSoNumeros.charAt(posicaoCampo);\n                    posicaoCampo++;\n                }\n            }\n        }\n        return NovoValorCampo;\n    };\n    return BrMaskDirective;\n}());\nexport { BrMaskDirective };\nBrMaskDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[brmasker]'\n            },] },\n    { type: Injectable },\n];\n/** @nocollapse */\nBrMaskDirective.ctorParameters = function () { return [\n    { type: FormGroupDirective, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: ElementRef, },\n]; };\nBrMaskDirective.propDecorators = {\n    'brmasker': [{ type: Input },],\n    'formControlName': [{ type: Input },],\n    'inputKeyup': [{ type: HostListener, args: ['keyup', ['$event'],] },],\n    'onNgModelChange': [{ type: HostListener, args: ['ngModelChange', ['$event'],] },],\n};\n//# sourceMappingURL=br-mask.js.map","export * from './br-mask';\n//# sourceMappingURL=index.js.map","export * from './app.module';\nexport * from './directives';\n//# sourceMappingURL=index.js.map"],"sourceRoot":"webpack:///","file":"default~pages-dashboard-tarefas-tarefas-module~pages-empresa-empresa-inserir-empresa-inserir-module~~da94fea3-es5.js"}